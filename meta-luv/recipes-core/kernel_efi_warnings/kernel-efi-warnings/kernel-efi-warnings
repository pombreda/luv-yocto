#!/bin/sh
#
# Copyright 2014 Intel Corporation; author Ricardo Neri
#
# This script analyzes the dmesg buffer looking for messages generated by the
# kernel that might indicate that it has found potential UEFI firmware bugs.

# First, check if the dmesg buffer is complete

dmesg | grep -q "Linux version"
if [ $? -ne 0 ]; then
    echo "Warning: Dmesg buffer may have been wrapped around"
fi


# Check if the kernel had to fixup page faults caused by the firmware accessing
# BOOT_SERVICES_DATA/CODE memory regions after ExitBootServices() has been called
# kernel message we use to find the illegal accesses:
#            efi: Fixing illegal access to BOOT_SERVICES_*. Bug in EFI firmware?

echo "Test: EFI_BOOT_SERVICES_*_illegal_access"
echo "Description: Check for illegal accesses to BOOT_SERVICES_* memory regions"
dmesg | grep -q "efi: Fixing illegal access to BOOT_SERVICES_\*. Bug in EFI firmware?"
if [ $? -eq 0 ]; then
    echo "FAIL: Found illegal accesses to BOOT_SERVICES_* memory"
else
    echo "PASS: No illegal access to BOOT_SERVICES_* memory detected"
fi
