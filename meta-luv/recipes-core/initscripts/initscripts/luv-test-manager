#
# Copyright 2014 Intel Corporation; author Matt Fleming
#

grep -q noluv /proc/cmdline
if [ $? -ne 1 ]; then
    exit 0
fi

FIFO="/mnt/.psplash/psplash_fifo"
psplash_write() {
    if [ -e $FIFO ]; then
	echo $1 > $FIFO
    fi
}

psplash_write "MSG Running tests..."

cat <<EOF
Welcome to the Linux UEFI Validation Project

Running tests...
EOF

#
# Every test must create a runner script and place it in $LUV_TESTS_DIR.
# See meta-luv/classes/luv-test.bbclass for details.
#
# Most also want to provide a testsuite log parser that converts the
# testsuite-specific output into the log schema defined in
# luv-test-parser.
#
LUV_TESTS_DIR=/etc/luv/tests/
LUV_PARSER_DIR=/etc/luv/parsers/
LUV_LOG_DIR=/var/log/luv/

mkdir -p ${LUV_LOG_DIR}

#
# We can't get very accurate progress because we've no way of knowing
# how many unit tests each test suite includes. Use a coarse-grained
# progress step based on the number of test suites.
#
psplash_write "PROGRESS 0"

runner_list=`ls -A ${LUV_TESTS_DIR}`

progress_step="$((100/$(echo $runner_list | wc -w)))"
for r in $runner_list; do
    runner="${LUV_TESTS_DIR}$r"

    [ -f "$runner" ] || continue

    psplash_write "PROGRESS $progress_step"
    psplash_write "MSG Running $r"

    parser="${LUV_PARSER_DIR}/$r"
    [ -e ${parser} ] || {
        parser="/bin/cat"
    }

    $runner | tee ${LUV_LOG_DIR}/$r | $parser | ${LUV_PARSER_DIR}/test-manager
done | awk '/      \[\+/ { units += 1 }
    /    \[\-/ { suites += 1 }
    /pass/ { passes += 1 }
    /fail/ { fails += $3 }
    /skip/ { skips += 1 }
    END {
	printf("\nRan %d testsuites and %d unittests, %d passes, %d fails, %d skipped\n", suites, units, passes, fails, skips)
    }

    { print $0 }' | tee /tmp/luv.results

[ -e $FIFO ] && {
    echo "DONE" > $FIFO
    grep "Ran" /tmp/luv.results | awk '{printf "MSG %s\n", $0}' > $FIFO

    umount -l /mnt/.psplash
}
